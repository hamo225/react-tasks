{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","console","log","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4e3d0d5.chunk.js","sourcesContent":["import Proptypes from \"prop-types\";\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className=\"btn\"\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  color: \"steelblue\",\n};\n\nButton.propTypes = {\n  text: Proptypes.string,\n  color: Proptypes.string,\n  onClick: Proptypes.func,\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      <Button\n        color={showAdd ? \"red\" : \"green\"}\n        text={showAdd ? \"Close\" : \"Add\"}\n        onClick={onAdd}\n      ></Button>\n    </header>\n  );\n};\n\n// Deault props\nHeader.defaultProps = {\n  title: \"Task Tracker\",\n};\n\n// Prop types validation\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// css in JS\n// const headerstyle = {\n//   color: \"orangered\",\n//   backgroundColor: \"blue\",\n// };\n\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div\n      // if task.reminder is true then add the class reminder\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\n      onDoubleClick={() => onToggle(task.id)}\n    >\n      <h3>\n        {task.text}\n        <FaTimes\n          style={{ color: \"red\", cursor: \"pointer\" }}\n          onClick={() => onDelete(task.id)}\n        ></FaTimes>\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\n// catch the props\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          onDelete={onDelete}\n          onToggle={onToggle}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(false); //default reminder for this is false\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!text) {\n      // validation for the text input\n      alert(\"Please add a task\");\n    }\n    onAdd({ text, day, reminder }); //if text is there then run onAdd()\n\n    // clear the states\n    setText(\"\");\n    setDay(\"\");\n    setReminder(false);\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add task\"\n          value={text} //the text from state\n          onChange={(e) => {\n            setText(e.target.value); //will set the value to whatever is written in the input\n          }}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Day & Time</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day & Time\"\n          value={day}\n          onChange={(e) => {\n            setDay(e.target.value);\n          }}\n        />\n      </div>\n      <div className=\"form-control  form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => {\n            setReminder(e.currentTarget.checked); //gives us the true or false value if the box is checked or not\n          }}\n        />\n      </div>\n\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nconst App = () => {\n  // part of app level state\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Vet appointment\",\n      day: \"Feb 20\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Doc appointment\",\n      day: \"March 22\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Flight to London\",\n      day: \"April 2\",\n      reminder: false,\n    },\n  ]);\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    console.log(id);\n    const newTask = { id, ...task };\n    //we are creating a new object which includes the random id created each time plus\n    // the task data passed into the funciton(usin spreading)\n    setTasks([...tasks, newTask]);\n  };\n\n  // Delet Task - on clicking x it takes the task id and then settask and filters\n  //out of the state the tasks that do not have the same id inputed. Meaning removes it.\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) => {\n        return task.id === id ? { ...task, reminder: !task.reminder } : task;\n      })\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      ></Header>\n      {showAddTask && <AddTask onAdd={addTask}></AddTask>}\n      {tasks.length > 0 ? (\n        <Tasks\n          tasks={tasks}\n          onDelete={deleteTask}\n          onToggle={toggleReminder}\n        ></Tasks>\n      ) : (\n        \"No Tasks\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}